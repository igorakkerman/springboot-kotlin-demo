openapi: 3.0.3
info:
  title: Device Configuration
  description: management API for configurations of devices
  version: 1.0.0
paths:
  /devices:
    get:
      summary: lists all device configurations
      description: lists all registered device configurations
      operationId: findAllDevices
      responses:
        200:
          $ref: '#/components/responses/DeviceListDocumentRetrieved'
    post:
      summary: creates a new device configuration
      operationId: createDevice
      requestBody:
        $ref: '#/components/requestBodies/DeviceDocument'
      responses:
        201:
          description: device configuration created
        400:
          description: invalid configuration data supplied
  /devices/{deviceId}:
    get:
      summary: provides the specified device configuation
      description: provides the device configuration for the specified device ID
      operationId: findDevice
      parameters:
        - name: deviceId
          in: path
          description: ID of the device
          required: true
          schema:
            $ref: '#/components/schemas/DeviceId'
      responses:
        200:
          $ref: '#/components/responses/DeviceDocumentRetrieved'
        404:
          description: device not found

    put:
      summary: replaces device configuration
      description: fully replaces configuration of an existing device
      operationId: replaceDevice
      parameters:
        - name: deviceId
          in: path
          description: ID of the device
          required: true
          schema:
            $ref: '#/components/schemas/DeviceId'
      requestBody:
        $ref: '#/components/requestBodies/DeviceDocument'
      responses:
        204:
          description: device configuration replaced
        400:
          description: invalid configuration data supplied
        404:
          description: device not found

    patch:
      summary: updates device configuration values
      description: modifies configuration values of an existing device
      operationId: updateDevice
      parameters:
        - name: deviceId
          in: path
          description: ID of the device
          required: true
          schema:
            $ref: '#/components/schemas/DeviceId'
      requestBody:
        $ref: '#/components/requestBodies/DeviceUpdateDocument'
      responses:
        204:
          description: device configuration updated
        400:
          description: invalid ID supplied
        404:
          description: device not found

components:
  schemas:
    Device:
      type: object
      discriminator:
        propertyName: type
        mapping:
          computer: '#/components/schemas/Computer'
          display: '#/components/schemas/Display'
      properties:
        type:
          type: string
        id:
          $ref: '#/components/schemas/DeviceId'
        name:
          $ref: '#/components/schemas/DeviceName'
      required:
        - type
        - id
        - name

    Computer:
      allOf:
        - $ref: '#/components/schemas/Device'
        - type: object
          properties:
            type:
              enum: ['computer']
            username:
              $ref: '#/components/schemas/Username'
            password:
              $ref: '#/components/schemas/Password'
            ipAddress:
              $ref: '#/components/schemas/IpAddress'
          required:
            - username
            - password
            - ipAddress

    Display:
      allOf:
        - $ref: '#/components/schemas/Device'
        - type: object
          properties:
            type:
              enum: ['display']
            resolution:
              $ref: '#/components/schemas/Resolution'
          required:
            - resolution

    ComputerUpdate:
      type: object
      properties:
        username:
          $ref: '#/components/schemas/Username'
        password:
          $ref: '#/components/schemas/Password'
        ipAddress:
          $ref: '#/components/schemas/IpAddress'
    DisplayUpdate:
      type: object
      properties:
        resolution:
          $ref: '#/components/schemas/Resolution'
    DeviceId:
      type: string
      example: macpro-m1-95014

    DeviceName:
      type: string
      example: best mac

    Username:
      type: string
      example: timapple
      minLength: 4
      maxLength: 12

    Password:
      type: string
      example: 0n3m0r3th1ng
      minLength: 8
      maxLength: 32

    IpAddress:
      type: string
      pattern: ^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$
      example: 8.8.8.8

    Resolution:
      type: string
      enum: [ HD, WQHD, UHD ]

  requestBodies:
    DeviceDocument:
      description: full device configuration; must include all required configuration values
      content:
        application/json:
          schema:
            oneOf:
              - $ref: '#/components/schemas/Computer'
              - $ref: '#/components/schemas/Display'
      required: true
    DeviceUpdateDocument:
      description: device configuration values to update; only modified values are required
      content:
        application/merge-patch+json:
          schema:
            oneOf:
              - $ref: '#/components/schemas/ComputerUpdate'
              - $ref: '#/components/schemas/DisplayUpdate'
      required: true
  responses:
    DeviceDocumentRetrieved:
      description: device configuration retrieved
      content:
        application/json:
          schema:
            oneOf:
              - $ref: '#/components/schemas/Computer'
              - $ref: '#/components/schemas/Display'
    DeviceListDocumentRetrieved:
      description: device configurations list retrieved
      content:
        application/json:
          schema:
            type: array
            items:
              oneOf:
                - $ref: '#/components/schemas/Computer'
                - $ref: '#/components/schemas/Display'
